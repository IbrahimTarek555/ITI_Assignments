#include "STD_TYPES.h"
#include "LIBRARY_interface.h"

#include "DIO_interface.h"
#include "PORT_interface.h"
#include "TIMERS_interface.h"
#include "GIE_interface.h"
#include "ADC_interface.h"
#include "EXTI_interface.h"

#include "CLCD_interface.h"

#include <util/delay.h>

/*
 * Timer0: peiod time = 256 * 1 = 256 us
 * 		   duty cycle = 64 / 256 = 25%
 *
 * Timer1:
 */

void Main_voidReadPWM(void);

uint16 Main_u16Time1 = 0;
uint16 Main_u16Time2 = 0;
uint16 Main_u16Time3 = 0;
uint16 Main_u16Period;
uint16 Main_u16On;

/*It is the main*/
void main(void)
{
	/*Peripherals Initialization*/
	PORT_voidInit();
//	ADC_voidInit();
	CLCD_voidInit();

	TIMER0_voidInit();
	TIMER0_voidSetCompValue(64);


	/*EXTI*/
	EXTI_voidInit();
	EXTI_u8SetCallBack(EXTI_u8INT0, &Main_voidReadPWM);

	TIMER1_voidInit();


	/*Define Variables*/
//	uint8 Local_u8;
//	DIO_u8SetPinValue(DIO_u8PORTA, DIO_u8PIN7, DIO_u8PIN_HIGH);

	/*Super Loop*/
	while(1)
	{
		Main_u16Period = Main_u16Time2 - Main_u16Time1;
		Main_u16On = Main_u16Time3 - Main_u16Time2;
		_delay_ms(3000);
		CLCD_voidClearDisplay();
		CLCD_u8GoToXY(0, 0);
		CLCD_voidSendDecimalNumber(Main_u16Period);
		CLCD_u8GoToXY(0, 1);
		CLCD_voidSendDecimalNumber(Main_u16On);
	}
}

void Main_voidReadPWM(void)
{
	static uint8 Local_u8Counter = 0u;

	if(Local_u8Counter == 0u)
	{
		TIMER1_voidSetTimerValue(0u);
		Main_u16Time1 = TIMER1_u16GetValue();
	}
	else if(Local_u8Counter == 1u)
	{
		Main_u16Time2 = TIMER1_u16GetValue();
		EXTI_u8SetSenseCtrl(EXTI_u8INT0, EXTI_u8FALLING_EDGE);
	}
	else if(Local_u8Counter == 2u)
	{
		Main_u16Time3 = TIMER1_u16GetValue();
		EXTI_u8IntDisable(EXTI_u8INT0);
	}


	Local_u8Counter++;
}
