#include "STD_TYPES.h"
#include "SpecialCharacters.h"

#include "DIO_interface.h"
#include "PORT_interface.h"

#include "CLCD_interface.h"
#include "KEYPAD_interface.h"

#include <util/delay.h>



void main(void)
{
	/*
	 * 1 counter for the numbers
	 */

	/*Define Variables*/
	uint8 Local_u8PressedKey = KEYPAD_u8NO_PRESSED_KEY;
	uint8 Local_u8FirstNumber = 0;
	uint8 Local_u8SecondNumber = 0;
	uint8 Local_u8TenIndex = 1;
	uint8 Local_u8TempNumber = 0;
	uint8 Local_u8ArrowCounter = 0;
	uint8 Local_u8DigitsCounter = 0;
	uint8 Local_u8ResultFlag = 0;
	uint8 Local_u8OperationIndex = 0;

	sint8 Local_s8FirstCounter = 0;
	sint8 Local_s8OPerationCounter = 0;
	sint8 Local_s8SecondCounter = 0;
	sint8 Local_s8Result;
	uint8 Local_u8Min;
	uint8 Local_u8SecondFlag;
	uint16 Local_u16AssResult;

	/*
	 * PORT Description:
	 * 1- DIO_PORTD_PIN0 -> DIO_PORTD_PIN2: INPUT, INTERNAL_PULL_UP
	 * 2- DIO_PORTA_PIN0 -> DIO_PORTA_PIN2: OUTPUT
	 * 3- DIO_PORTB_PIN4 -> DIO_PORTB_PIN7: OUTPUT
	 */
	PORT_voidInit();

	/*Initialize enter button*/
	uint8 Local_u8EnterButton = 1;

	/*Initialize up and down arrows*/
	uint8 Local_u8UpButton = 1;
	uint8 Local_u8DownButton = 1;

	/*Initialize the lcd*/
	CLCD_voidInit();

	while(1)
	{
		/*Get the pressed key*/
		Local_u8PressedKey = KEYPAD_u8GetPressedKey();

		/*Calculate the first number*/
		if(Local_u8ArrowCounter == 0)
		{
			switch(Local_u8PressedKey)
			{
			case '+':
			case '-':
			case '*':
			case '/':
			case '%':
			case '.':
			case '%':
			case '.':
//				Local_u8DigitsCounter++;
				CLCD_voidSendData(Local_u8PressedKey);

				if(Local_u8FirstNumber == 0)
				{
					CLCD_u8GoToXY(0, 0);
					break;
				}
				else
				{
					Local_u8ArrowCounter++;
					Local_u8TenIndex = 1;
					break;
				}
			default:
//				Local_u8DigitsCounter++;
				CLCD_voidSendDecimalNumber(Local_u8PressedKey);
				Local_u8PressedKey = Local_u8PressedKey * Local_u8TenIndex;
				Local_u8FirstNumber = Local_u8FirstNumber + Local_u8PressedKey;
				Local_u8TenIndex = Local_u8TenIndex * 10;
				break;
			}
		}

		/*Check the operation*/
		if(Local_u8ArrowCounter == 1)
		{
			switch(Local_u8PressedKey)
			{

			case '+':
			case '-':
			case '*':
			case '/':
			case '%':
			case '.':
			case '%':
				Local_u8OperationIndex = Local_u8PressedKey;	Local_u8ArrowCounter++;	break;


			case '=':
				CLCD_voidSendDecimalNumber(Local_u8FirstNumber);
				Local_u8ResultFlag = 1;
//				Local_u8ArrowCounter++;
				break;
			}
		}

		/*Calculate the second number*/
		if(Local_u8ArrowCounter == 2)
		{
			switch(Local_u8PressedKey)
			{
			case '=':

			case '+':
			case '-':
			case '*':
			case '/':
			case '%':
			case '.':
			case '%':
				if(Local_u8SecondNumber == 0)
				{
					Local_u8DigitsCounter++;
					CLCD_voidSendData(Local_u8PressedKey);
					break;
				}
				else
				{
					CLCD_voidSendData(Local_u8PressedKey);
					CLCD_u8GoToXY(Local_u8DigitsCounter, 0);
					break;
				}
			default:
//				Local_u8DigitsCounter++;
				CLCD_voidSendDecimalNumber(Local_u8PressedKey);
				Local_u8PressedKey = Local_u8PressedKey * Local_u8TenIndex;
				Local_u8SecondNumber = Local_u8SecondNumber + Local_u8PressedKey;
				Local_u8TenIndex = Local_u8TenIndex * 10;
				break;
			}
		}

		/*If the program finished its work, stop here*/
		if(Local_u8ResultFlag == 1)
		{
			while(1);
		}
	}
}
