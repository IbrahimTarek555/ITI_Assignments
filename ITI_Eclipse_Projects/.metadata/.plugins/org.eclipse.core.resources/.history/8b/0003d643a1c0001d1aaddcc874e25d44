#include "STD_TYPES.h"
#include "SpecialCharacters.h"

#include "DIO_interface.h"
#include "PORT_interface.h"

#include "CLCD_interface.h"
#include "KEYPAD_interface.h"

#include <util/delay.h>


void main(void)
{
	/*Define Variables*/
	uint8 Local_u8ArrowCounter = 0;
	uint8 Local_u8PressedKey = KEYPAD_u8NO_PRESSED_KEY;

	uint8 Local_u8FirstFlag = 0;
	uint8 Local_u8SecondFlag = 0;

	sint8 Local_s8SecondsCounter = 0;
	sint8 Local_s8MinutesCounter = 0;
	sint8 Local_s8HoursCounter = 0;

	uint8 Local_u8Hours = 0;
	uint8 Local_u8FirstHoursDigit = 0;
	uint8 Local_u8SecondHoursDigit = 0;

	uint8 Local_u8Minutes = 0;
	uint8 Local_u8FirstMinutesDigit = 0;
	uint8 Local_u8SecondMinutesDigit = 0;

	uint8 Local_u8Seconds;
	uint8 Local_u8FirstSecondsDigit = 0;
	uint8 Local_u8SecondSecondsDigit = 0;

	/*Port Initialization*/
	PORT_voidInit();

	/*Initialize the lcd*/
	CLCD_voidInit();

	CLCD_u8GoToXY(0, 0);
	CLCD_u8SendString("00:00:00");

	while(1)
	{
		Local_u8PressedKey = KEYPAD_u8GetPressedKey();

		if(Local_u8PressedKey == 11)
		{
			CLCD_voidSendSpecialCharacter(Local_u8EraseCharacter, 1, Local_u8ArrowCounter, 1);
			Local_u8ArrowCounter++;
		}
		else if(Local_u8PressedKey == 22)
		{
			CLCD_voidSendSpecialCharacter(Local_u8EraseCharacter, 1, Local_u8ArrowCounter, 1);
			Local_u8ArrowCounter--;
		}
		else if(Local_u8PressedKey == 33)
		{
			Local_u8ArrowCounter = 8;
		}

		switch(Local_u8ArrowCounter)
		{
		case 0:
			CLCD_u8GoToXY(Local_u8ArrowCounter, 0);
			switch(Local_u8PressedKey)
			{
			case 0:
			case 1:
			case 2:
			case 3:
			case 4:
			case 5:
			case 6:
			case 7:
			case 8:
			case 9:
				CLCD_voidSendDecimalNumber(Local_u8PressedKey);
				Local_u8FirstHoursDigit = Local_u8PressedKey;
				break;
			}
			break;

		case 1:
			CLCD_u8GoToXY(Local_u8ArrowCounter, 0);
			Local_u8FirstFlag = 0;
			switch(Local_u8PressedKey)
			{
			case 0:
			case 1:
			case 2:
			case 3:
			case 4:
			case 5:
			case 6:
			case 7:
			case 8:
			case 9:
				CLCD_voidSendDecimalNumber(Local_u8PressedKey);
				Local_u8SecondHoursDigit = Local_u8PressedKey;
				break;
			}
			break;

		case 2:
			if(Local_u8FirstFlag == 0)
			{
				Local_u8ArrowCounter++;
			}
			else if(Local_u8FirstFlag == 1)
			{
				Local_u8ArrowCounter--;
			}

		case 3:
			CLCD_u8GoToXY(Local_u8ArrowCounter, 0);
			uint8 Local_u8FirstFlag = 1;
			switch(Local_u8PressedKey)
			{
			case 0:
			case 1:
			case 2:
			case 3:
			case 4:
			case 5:
			case 6:
			case 7:
			case 8:
			case 9:
				CLCD_voidSendDecimalNumber(Local_u8PressedKey);
				Local_u8FirstMinutesDigit = Local_u8PressedKey;
				break;
			}
			break;


		case 4:
			CLCD_u8GoToXY(Local_u8ArrowCounter, 0);
			Local_u8SecondFlag = 0;
			switch(Local_u8PressedKey)
			{
			case 0:
			case 1:
			case 2:
			case 3:
			case 4:
			case 5:
			case 6:
			case 7:
			case 8:
			case 9:
				CLCD_voidSendDecimalNumber(Local_u8PressedKey);
				Local_u8SecondMinutesDigit = Local_u8PressedKey;
				break;
			}
			break;

		case 5:
			if(Local_u8SecondFlag == 0)
			{
				Local_u8ArrowCounter++;
			}
			else if(Local_u8SecondFlag == 1)
			{
				Local_u8ArrowCounter--;
			}

		case 6:
			CLCD_u8GoToXY(Local_u8ArrowCounter, 0);
			Local_u8SecondFlag = 1;
			switch(Local_u8PressedKey)
			{
			case 0:
			case 1:
			case 2:
			case 3:
			case 4:
			case 5:
			case 6:
			case 7:
			case 8:
			case 9:
				CLCD_voidSendDecimalNumber(Local_u8PressedKey);
				Local_u8FirstSecondsDigit = Local_u8PressedKey;
				break;
			}
			break;

		case 7:
			CLCD_u8GoToXY(Local_u8ArrowCounter, 0);
			switch(Local_u8PressedKey)
			{
			case 0:
			case 1:
			case 2:
			case 3:
			case 4:
			case 5:
			case 6:
			case 7:
			case 8:
			case 9:
				CLCD_voidSendDecimalNumber(Local_u8PressedKey);
				Local_u8SecondSecondsDigit = Local_u8PressedKey;
				break;
			}
			break;

		case 8:
			Local_u8Hours = Local_u8SecondHoursDigit + Local_u8FirstHoursDigit * 10;
			Local_u8Minutes = Local_u8SecondMinutesDigit + Local_u8FirstMinutesDigit * 10;
			Local_u8Seconds = Local_u8SecondSecondsDigit + Local_u8FirstSecondsDigit * 10;
//			if(Local_u8Seconds > 60)
//			{
////				CLCD_voidSendDecimalNumber(Local_u8Seconds);
//				for(Local_s8SecondsCounter = Local_u8Seconds; Local_s8SecondsCounter >= 0; Local_s8SecondsCounter--)
//				{
//					CLCD_u8GoToXY(6, 0);
//					CLCD_voidSendDecimalNumber(Local_s8SecondsCounter);
//					_delay_ms(500);
//				}
//			}

			CLCD_u8GoToXY(0, 0);

			CLCD_voidSendDecimalNumber(Local_u8Hours);
			CLCD_voidSendData(':');

			CLCD_voidSendDecimalNumber(Local_u8Minutes);
			CLCD_voidSendData(':');

			CLCD_voidSendDecimalNumber(Local_u8Seconds);

//			for(Local_s8HoursCounter = Local_u8Hours; Local_s8HoursCounter >= 0; Local_s8HoursCounter--)
//			{
//				if(Local_s8HoursCounter < 10)
//				{
//					CLCD_u8GoToXY(1, 0);
//				}
//				else
//				{
//					CLCD_u8GoToXY(0, 0);
//				}
//
//				CLCD_voidSendDecimalNumber(Local_s8SecondsCounter);
//				_delay_ms(500);
//
//				for(Local_s8MinutesCounter = Local_u8Minutes; Local_s8MinutesCounter >= 0; Local_s8MinutesCounter--)
//				{
//					if(Local_s8HoursCounter < 10)
//					{
//						CLCD_u8GoToXY(4, 0);
//					}
//					else
//					{
//						CLCD_u8GoToXY(3, 0);
//					}
//
//					CLCD_voidSendDecimalNumber(Local_s8MinutesCounter);
//					_delay_ms(500);
//
//					for(Local_s8SecondsCounter = 60; Local_s8SecondsCounter >= 0; Local_s8SecondsCounter--)
//					{
//						if(Local_s8HoursCounter < 10)
//						{
//							CLCD_u8GoToXY(7, 0);
//						}
//						else
//						{
//							CLCD_u8GoToXY(6, 0);
//						}
//						CLCD_voidSendDecimalNumber(Local_s8SecondsCounter);
//						_delay_ms(500);
//					}
//				}
//			}

		}

//		CLCD_u8GoToXY(0,0);
//		CLCD_voidSendDecimalNumber(Local_u8ArrowCounter);
		CLCD_voidSendSpecialCharacter(Local_u8UpwordArrow, 0, Local_u8ArrowCounter, 1);
	}
}
