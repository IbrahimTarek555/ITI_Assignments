#include "STD_TYPES.h"
#include "DEFINES.h"
#include "BIT_MATH.h"

#include "DIO_interface.h"
#include "PORT_interface.h"
#include "UART_interface.h"
#include "GIE_interface.h"

#include "MOTOR_interface.h"

#include <util/delay.h>

//void Main_voidTimer0ISR(void);
void Main_voidReceiveNotificFunc(void);

/*Define two DC motors*/
MOTOR_t Main_stMotor1;
MOTOR_t Main_stMotor2;

/*Define global variables*/
static uint8 Main_u8ReceivedData = 0u;

/*It is the main*/
void main(void)
{
	/*Initialize needed peripherals*/
	PORT_voidInit();
	USART_voidInit();

	/*Enable Global Interrupt*/
	GIE_voidEnable();

	/*Initialize motors' pins*/
	Main_stMotor1.Pin1 = DIO_u8PIN0;
	Main_stMotor1.Pin2 = DIO_u8PIN1;
	Main_stMotor1.Port = DIO_u8PORTC;

	Main_stMotor2.Pin1 = DIO_u8PIN2;
	Main_stMotor2.Pin2 = DIO_u8PIN3;
	Main_stMotor2.Port = DIO_u8PORTC;

	while(1)
	{
		/*Receive Character message from usart with asynchronous function*/
		USART_u8ReceiveBufferAsynch(&Main_u8ReceivedData, 1, Main_voidReceiveNotificFunc);
	}
}



/*USART Receive ISR*/
void Main_voidReceiveNotificFunc(void)
{
	DIO_u8SetPinValue(DIO_u8PORTA, DIO_u8PIN7, DIO_u8PIN_HIGH);
	/*Switch the char which received then take its corresponding order*/
	switch(Main_u8ReceivedData)
	{
	case 'F':
		MOTOR_u8RotateCW(&Main_stMotor1);
		MOTOR_u8RotateCW(&Main_stMotor2);
		_delay_ms(200);
		MOTOR_u8Stop(&Main_stMotor1);
		MOTOR_u8Stop(&Main_stMotor2);
		break;

	case 'B':
		MOTOR_u8RotateCCW(&Main_stMotor1);
		MOTOR_u8RotateCCW(&Main_stMotor2);
		_delay_ms(200);
		MOTOR_u8Stop(&Main_stMotor1);
		MOTOR_u8Stop(&Main_stMotor2);
		break;

	case 'W':
		MOTOR_u8RotateCW(&Main_stMotor1);
		_delay_ms(200);
		MOTOR_u8Stop(&Main_stMotor1);
		break;

	case 'L':
		MOTOR_u8RotateCW(&Main_stMotor2);
		_delay_ms(200);
		MOTOR_u8Stop(&Main_stMotor2);
		break;

	default:
		/*Do nothing*/
		break;
	}
}
