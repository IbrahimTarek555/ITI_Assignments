/*********************************************************************************/
/*********************************************************************************/
/**********************			Author: Ibrahim Tarek		**********************/
/**********************			File: EXTI_program.c		**********************/
/**********************			Version: 1.00				**********************/
/*********************************************************************************/
/*********************************************************************************/

/**
 * @file EXTI_program.c
 * @author Ibrahim Tarek
 * @brief This file implements the EXTI module functions.
 * @version 1.00
 */

#include "STD_TYPES.h"
#include "BIT_MATH.h"
#include "DEFINES.h"

#include "EXTI_interface.h"
#include "EXTI_config.h"
#include "EXTI_private.h"
#include "EXTI_register.h"


/**
 * @brief Function to initialize external interrupt channel number 0 with prebuild configuration.
 */
void EXTI_voidInt0Init(void)
{
#if	INT0_INITIAL_STATE == ENABLED
#if	INT0_SENSE_CTRL == EXTI_u8LOW_LEVEL
	CLR_BIT(MCUCR,MCUCR_ISC00);
	CLR_BIT(MCUCR,MCUCR_ISC01);

#elif INT0_SENSE_CTRL == EXTI_u8ON_CHANGE
	SET_BIT(MCUCR,MCUCR_ISC00);
	CLR_BIT(MCUCR,MCUCR_ISC01);

#elif INT0_SENSE_CTRL == EXTI_u8FALLING_EDGE
	CLR_BIT(MCUCR,MCUCR_ISC00);
	SET_BIT(MCUCR,MCUCR_ISC01);

#elif INT0_SENSE_CTRL == EXTI_u8RISING_EDGE
	SET_BIT(MCUCR,MCUCR_ISC00);
	SET_BIT(MCUCR,MCUCR_ISC01);

#endif

#elif INT0_INITIAL_STATE == DISABLED
	/*Do nothing*/

#else
#error	"wrong configuration for INT0 initial state"
#endif
}

/**
 * @brief Function to initialize external interrupt channel number 1 with prebuild configuration.
 */
void EXTI_voidInt1Init(void)
{

}

/**
 * @brief Function to initialize external interrupt channel number 2 with prebuild configuration.
 */
void EXTI_voidInt2Init(void)
{

}

/**
 * @brief Function to change the sense control of an interrupt channel during runtime.
 * @param Copy_u8IntNum	Interrupt Channel Number.
 * @param Copy_u8Sense	Interrupt Sense Control.
 * @return	Error State.
 */
uint8 EXTI_u8SetSenseCtrl(uint8 Copy_u8IntNum, uint8 Copy_u8Sense)
{

}

/**
 * @brief Function to enable an interrupt channel.
 * @param Copy_u8IntNum	Interrupt Channel Number.
 * @return	Error State.
 */
uint8 EXTI_u8IntEnable(uint8 Copy_u8IntNum)
{

}

/**
 * @brief Function to disable an interrupt channel.
 * @param Copy_u8IntNum	Interrupt Channel Number.
 * @return	Error State.
 */
uint8 EXTI_u8IntDisable(uint8 Copy_u8IntNum)
{

}
